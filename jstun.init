#!/bin/sh
#
# jstun	Java based STUN server.
#
# chkconfig:	345 89 11
#
# description:	jstun Java based STUN server.
#
# processname:	jstun
# config:
# pidfile:		/var/run/jstun.pid
#
# $Id$

# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down "jstun"
		exit 1
	fi
else
	exit 0
fi

STUN_PORT1=3478
STUN_PORT2=3479

# Get service config - may override defaults
[ -f /etc/sysconfig/jstun ] && . /etc/sysconfig/jstun

ARGS="$STUN_PORT1 $STUN_IPADDRESS1 $STUN_PORT2 $STUN_IPADDRESS2"

start() {
	# Check if the service is already running?
	if [ -f /var/lock/subsys/jstun ]; then
		msg_already_running "jstun"
		return
	fi

	msg_starting "jstun"
	daemon /usr/sbin/jstun --daemon --pidfile=/var/run/jstun.pid $ARGS
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/jstun
}

stop() {
	if [ ! -f /var/lock/subsys/jstun ]; then
		msg_not_running "jstun"
		return
	fi

	# Stop daemons.
	msg_stopping "jstun"
	PID=/var/run/jstun.pid
	killproc --pidfile /var/run/jstun.pid jstun -TERM
	wait $(cat /var/run/jstun.pid)
	rm -f /var/lock/subsys/jstun
}

condrestart() {
	if [ ! -f /var/lock/subsys/jstun ]; then
		msg_not_running "jstun"
		RETVAL=$1
		return
	fi

	stop
	sleep 1
	start
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	stop
	sleep 1
	start
	;;
  try-restart)
	condrestart 0
	;;
  reload)
	reload
	;;
  force-reload)
	condrestart 7
	;;
  status)
	status jstun
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|restart|try-restart|reload|force-reload|status}"
	exit 3
esac

exit $RETVAL
